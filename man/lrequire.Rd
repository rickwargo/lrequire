% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lrequire.R
\name{lrequire}
\alias{lrequire}
\title{Requires an R file, exporting specific variables as a list.}
\usage{
lrequire(file)
}
\arguments{
\item{file}{a string (or expression) that specifies a file to load, with or without an optional .R extension. If
       the file does not exist in the current directory, it searches for the file in the following
       directories, first seaching all directories for the named file, then the file with a .R extension.

       \itemize{
         \item{lib/}
         \item{R/}
         \item{../lib/}
         \item{../R/}
       }

       All variables exposed in the file will be hidden in the calling environment, except for
       what is exposed through the module.exports or exports list variable.}
}
\value{
Any values that exist in the \emph{list} \code{module.exports} or \code{exports}.

        If no file is found, \code{NA} is returned.
}
\description{
\code{lrequire} looks in the current path, and then through a list of predefined paths
to search for the given file to source into the current environment, but only making visible
specific variables that are "exported" as a list, in a fashion similar
to \href{https://node.js/}{node.js}.
}
\details{
\code{lrequire} operates in a similar principle to modules in node.js - keeping any variables created in
the source file isolated from the calling environment, while exposing a select set of values/parameters.
The specific values are exposed by setting named list elements to the desired value. Note this list exposed
in \code{nodule.exports} should have named items so they can easily be accessed in the calling environment.
}
\examples{
## Given: myfile.R -- example
this = list(
  ten=      10,
  me=       "Rick",
  square=   function(x) { return (x*x) }
)

this$power <- function(x, y) { return (x^y) }

module.exports = this
## End of myfile.R

## Any one of the file methods can be used to load myfile.R:
# vals <- lrequire(myfile)
# vals <- lrequire(myfile.R)
# vals <- lrequire('myfile')
# vals <- lrequire('myfile.R')

## To use vals, access the individual element that is returned through module.exports.
\dontrun{
print(paste("The square of 8 is ", vals$square(8)))
}

}
\author{
Rick Wargo, \email{lrequire@rickwargo.com}
}

